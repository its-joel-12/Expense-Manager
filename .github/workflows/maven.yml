# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Auto Deploy on Render

on:
  push:
    branches: [ "main" ]
#  pull_request:
#    branches: [ "deployment" ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      INITIAL_USER_PASSWORD: ${{ secrets.INITIAL_USER_PASSWORD }}
      INITIAL_ADMIN_PASSWORD: ${{ secrets.INITIAL_ADMIN_PASSWORD }}
      SPRING_APP_JWT_SECRET: ${{ secrets.SPRING_APP_JWT_SECRET }}
      SPRING_APP_JWT_EXPIRATION_MS: ${{ secrets.SPRING_APP_JWT_EXPIRATION_MS }}
      TEST_API: ${{ secrets.TEST_API }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml


    # Docker Hub: log in using credentials stored in repo secrets
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
       username: ${{ secrets.DOCKERHUB_USERNAME }}
       password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
       images: ${{ secrets.DOCKERHUB_USERNAME }}/expense-manager

    - name: Build & push Docker image
      uses: docker/build-push-action@v6
      with:
       context: .
       file: ./Dockerfile
       push: true
       tags: ${{ steps.meta.outputs.tags }}
       labels: ${{ steps.meta.outputs.labels }}
    - name: Deploy to render
      if: github.ref == 'refs/heads/main'
      run: curl ${{ secrets.RENDER_HOOK }}